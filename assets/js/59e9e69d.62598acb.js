(self.webpackChunktoolbox=self.webpackChunktoolbox||[]).push([[961],{29058:(e,t,n)=>{var s={"./_project_docs_deploy.yml":14163,"./_project_docs_tests.yml":5389,"./deploy-pages.yml":45363,"./node-quality.yml":7037,"./node-security.yml":9980,"./semantic-release.yml":77649,"./tests_node-quality.yml":7267};function i(e){var t=o(e);return n(t)}function o(e){if(!n.o(s,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return s[e]}i.keys=function(){return Object.keys(s)},i.resolve=o,e.exports=i,i.id=29058},53094:(e,t,n)=>{var s={"./_category_":82195,"./_category_.json":82195,"./container/_category_":47251,"./container/_category_.json":47251,"./container/container.mdx":79291,"./github/_category_":3657,"./github/_category_.json":3657,"./github/deploy-pages/deploy-pages.mdx":75990,"./nodejs/_category_":95457,"./nodejs/_category_.json":95457,"./nodejs/node-quality/eslint.png":27508,"./nodejs/node-quality/node-quality.mdx":32368,"./nodejs/node-quality/tsc.png":21137,"./nodejs/node-security/codeql.png":11208,"./nodejs/node-security/node-security.mdx":86634,"./nodejs/node-security/spdx.png":64173,"./nodejs/node-security/trivy-deps.png":12791,"./nodejs/node-security/trivy-license.png":64964,"./release/_category_":25645,"./release/_category_.json":25645,"./release/semantic-release/gh.png":74410,"./release/semantic-release/semantic-release.mdx":98225,"./release/semantic-release/workflow.png":2040};function i(e){var t=o(e);return n(t)}function o(e){if(!n.o(s,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return s[e]}i.keys=function(){return Object.keys(s)},i.resolve=o,e.exports=i,i.id=53094},81570:(e,t,n)=>{"use strict";n.d(t,{Ay:()=>E,RM:()=>$});var s=n(74848),i=n(28453),o=n(58069),r=n(46670),a=n.n(r),l=n(20705),c=n(84993),d=n(60319),u=n(83260),p=n(8532),h=n(75301),m=n(80926);const f=(0,h.A)({palette:{mode:"light"}}),g=(0,h.A)({palette:{mode:"dark"}});function v(e){const t=n(29058)("./"+e.workflow),{colorMode:i}=(0,p.G)(),r="dark"===i?g:f;return(0,s.jsx)(m.A,{theme:r,children:(0,s.jsx)("div",{children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(d.A,{caption:"click to view",id:"full-source",expandIcon:(0,s.jsx)(u.A,{}),children:"Full source code for this workflow"}),(0,s.jsxs)(c.A,{children:[(0,s.jsx)("a",{target:"_blank",rel:"noreferrer",href:"https://github.com/erzz/toolbox/blob/main/.github/workflows/"+e.workflow,children:"View on Github"}),(0,s.jsx)(o.A,{title:".github/workflows/"+e.workflow,language:"yml",showLineNumbers:!0,children:a().stringify(t.default,{blockQuote:"literal",lineWidth:0,commentString:"#"})})]})]})})})}const y={table:"table_TuvV",step:"step_QwWt",uses:"uses_dRpF",conditional:"conditional_TcIu"},b=(0,h.A)({palette:{mode:"light"}}),w=(0,h.A)({palette:{mode:"dark"}});function j(e){const t=n(29058)("./"+e.workflow).default.jobs;let s=[];for(const n in t)s.push(x(t[n]));return s}function x(e){let{name:t,steps:n}=e;const{colorMode:i}=(0,p.G)(),o="dark"===i?w:b;return(0,s.jsx)(m.A,{theme:o,children:(0,s.jsx)("div",{children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(d.A,{id:t,expandIcon:(0,s.jsx)(u.A,{}),children:t}),(0,s.jsx)(c.A,{children:(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{className:y.step,children:"Step"}),(0,s.jsx)("th",{className:y.uses,children:"Uses"}),(0,s.jsx)("th",{className:y.conditional,children:"Conditional"})]},t)}),(0,s.jsx)("tbody",{children:n.map(((e,t)=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{className:y.step,children:e.name||"Unnamed Step"},t+"-name"),(0,s.jsx)("td",{className:y.uses,children:e.uses||"script"},t+"-uses"),(0,s.jsx)("td",{className:y.conditional,children:void 0===e.if?"false":"true"},t+"-if")]},t+e.name)))})]})})]})},t)})}var k=n(52362),T=n(56289);function _(e){return void 0===e.configs||null===e.configs?(0,s.jsx)(k.A,{type:"note",title:"This workflow does not provide any default configuration files"}):(0,s.jsxs)(k.A,{type:"info",title:"This workflow provides some default configuration files",children:[(0,s.jsx)("p",{children:"They are provided to get you started with sensible defaults. It's OK to replace them in order to tweak for your own preferences if required."}),(0,s.jsx)("ul",{children:e.configs.map(((e,t)=>(0,s.jsx)("li",{children:(0,s.jsx)(T.A,{to:"https://github.com/erzz/toolbox/blob/main/configs/"+e,children:e})},e)))})]})}const $=[{value:"Workflow details",id:"workflow-details",level:2},{value:"Source code",id:"source-code",level:3},{value:"Job definitions",id:"job-definitions",level:3},{value:"Configuration Files",id:"configuration-files",level:3}];function N(e){const t={h2:"h2",h3:"h3",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"workflow-details",children:"Workflow details"}),"\n",(0,s.jsx)(t.h3,{id:"source-code",children:"Source code"}),"\n",(0,s.jsx)(v,{workflow:e.workflow}),"\n",(0,s.jsx)(t.h3,{id:"job-definitions",children:"Job definitions"}),"\n",(0,s.jsx)(j,{workflow:e.workflow}),"\n",(0,s.jsx)(t.h3,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,s.jsx)(_,{configs:e.configs})]})}function E(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}},24996:(e,t,n)=>{"use strict";n.d(t,{Ay:()=>g,RM:()=>m});var s=n(74848),i=n(28453),o=n(58069);function r(e){const t=e.workflow.split("/").pop().split(".")[0],i=n(29058)("./"+e.workflow);var r=Object.keys(l(i.default.on.workflow_call.inputs,(e=>!0===e.required))),a=Object.keys(l(i.default.on.workflow_call.secrets,(e=>!0===e.required)));function l(e,t){return null==e?{}:Object.fromEntries(Object.entries(e).filter((e=>{let[n,s]=e;return t(s,n)})))}return(0,s.jsxs)(o.A,{language:"yaml",title:"Bare minimum code to insert in your workflow",showLineNumbers:!0,children:["jobs:\n","  "+t+":\n","    uses: erzz/toolbox/.github/workflows/"+t+".yml@v"+e.version+"\n",r.length>0&&"    with:\n      "+r.map((e=>e+": <your-value>")).join("\n      ")+"\n"||"    # no mandatory inputs\n",a.length>0&&"    secrets:\n      "+a.map((e=>e+": ${{ secrets.YOUR_SECRET }}")).join("\n      ")+"\n"||"    # no mandatory secrets\n"]})}var a=n(52362);const l={table:"table_J3FO",input:"input_pEnH",type:"type_oC2D",inputDesc:"inputDesc_g8w5",inputRequired:"inputRequired_QGxu",inputDefault:"inputDefault_wfFx"};function c(e){const t=n(29058)("./"+e.workflow).default.on.workflow_call.inputs;return void 0===t?(0,s.jsx)(a.A,{type:"note",title:"The are no inputs defined in this workflow"}):(0,s.jsxs)("table",{className:l.table,children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{className:l.input,children:"Input"}),(0,s.jsx)("th",{className:l.type,children:"Type"}),(0,s.jsx)("th",{className:l.inputDesc,children:"Description"}),(0,s.jsx)("th",{className:l.inputRequired,children:"Required"}),(0,s.jsx)("th",{className:l.inputDefault,children:"Default"})]})}),(0,s.jsx)("tbody",{children:Object.keys(t).map(((e,n)=>(0,s.jsxs)("tr",{className:n,children:[(0,s.jsx)("td",{className:l.input,children:e}),(0,s.jsx)("td",{className:l.type,children:t[e].type||"not set"}),(0,s.jsx)("td",{className:l.inputDesc,children:Object.prototype.hasOwnProperty.call(t[e],"description")?t[e].description:"missing description"}),(0,s.jsx)("td",{className:l.inputRequired,children:Object.prototype.hasOwnProperty.call(t[e],"required")?t[e].required.toString():"false"}),(0,s.jsx)("td",{className:l.inputDefault,children:(0,s.jsx)("code",{children:Object.prototype.hasOwnProperty.call(t[e],"default")?t[e].default.toString():"null"})})]},n)))})]})}const d={table:"table_trvY",secret:"secret_CUF2",secretDesc:"secretDesc_OEyo",secretRequired:"secretRequired_MKYV"};function u(e){const t=n(29058)("./"+e.workflow).default.on.workflow_call.secrets;return void 0===t?(0,s.jsx)(a.A,{type:"note",title:"There are no secrets defined in this workflow"}):(0,s.jsxs)("table",{className:d.table,children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{className:d.secret,children:"Input"}),(0,s.jsx)("th",{className:d.secretDesc,children:"Description"}),(0,s.jsx)("th",{className:d.secretRequired,children:"Required"})]})}),(0,s.jsx)("tbody",{children:Object.keys(t).map(((e,n)=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{className:d.secret,children:e}),(0,s.jsx)("td",{className:d.secretDesc,children:Object.prototype.hasOwnProperty.call(t[e],"description")?t[e].description:"missing description"}),(0,s.jsx)("td",{className:d.secretRequired,children:Object.prototype.hasOwnProperty.call(t[e],"required")?t[e].required.toString():"false"})]},n)))})]})}const p={table:"table_Nx1i",output:"output_dZCf",outputDesc:"outputDesc_Rce0",outputValue:"outputValue_wlTE"};function h(e){const t=n(29058)("./"+e.workflow).default.on.workflow_call.outputs;return void 0===t?(0,s.jsx)(a.A,{type:"note",title:"No outputs provided by this workflow"}):(0,s.jsxs)("table",{className:p.table,children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{className:p.output,children:"Output"}),(0,s.jsx)("th",{className:p.outputDesc,children:"Description"}),(0,s.jsx)("th",{className:p.outputValue,children:"Value"})]})}),(0,s.jsx)("tbody",{children:Object.keys(t).map(((e,n)=>(0,s.jsxs)("tr",{className:n,children:[(0,s.jsx)("td",{className:p.output,children:e}),(0,s.jsx)("td",{className:p.outputDesc,children:Object.prototype.hasOwnProperty.call(t[e],"description")?t[e].description:"missing description"}),(0,s.jsx)("td",{className:p.outputValue,children:(0,s.jsx)("code",{children:t[e].value})})]},n)))})]})}const m=[{value:"Usage",id:"usage",level:2},{value:"Minimal Example",id:"minimal-example",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Secrets",id:"secrets",level:3},{value:"Outputs",id:"outputs",level:3}];function f(e){const t={a:"a",h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.h3,{id:"minimal-example",children:"Minimal Example"}),"\n",(0,s.jsx)(t.p,{children:"Below is an example of the minimal configuration required to run the workflow. It's based on\nsensible defaults but will not satisfy all use cases."}),"\n",(0,s.jsxs)(t.p,{children:["To see how to customise the job(s) to work for your case, refer to ",(0,s.jsx)(t.a,{href:"#inputs",children:"inputs"}),",\n",(0,s.jsx)(t.a,{href:"#secrets",children:"secrets"})," and the ",(0,s.jsx)(t.a,{href:"#additional-examples",children:"Additional examples"}),"."]}),"\n",(0,s.jsx)(r,{workflow:e.workflow,version:e.version}),"\n",(0,s.jsx)(t.h3,{id:"inputs",children:"Inputs"}),"\n",(0,s.jsx)(c,{workflow:e.workflow}),"\n",(0,s.jsx)(t.h3,{id:"secrets",children:"Secrets"}),"\n",(0,s.jsx)(u,{workflow:e.workflow}),"\n",(0,s.jsx)(t.h3,{id:"outputs",children:"Outputs"}),"\n",(0,s.jsx)(h,{workflow:e.workflow})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}},79291:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"workflows/container/container","title":"Container","description":"Coming soon","source":"@site/docs/workflows/container/container.mdx","sourceDirName":"workflows/container","slug":"/workflows/container/","permalink":"/docs/workflows/container/","draft":false,"unlisted":false,"editUrl":"https://github.com/erzz/toolbox/tree/main/packages/create-docusaurus/templates/shared/docs/workflows/container/container.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Containers","permalink":"/docs/category/containers"},"next":{"title":"GitHub","permalink":"/docs/category/github"}}');var i=n(74848),o=n(28453);const r={},a="Container",l={},c=[];function d(e){const t={h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"container",children:"Container"})}),"\n",(0,i.jsx)(t.p,{children:"Coming soon"})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},75990:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"workflows/github/deploy-pages/deploy-pages","title":"Deploy to Github Pages","description":"Build and deploy an application to GitHub pages.","source":"@site/docs/workflows/github/deploy-pages/deploy-pages.mdx","sourceDirName":"workflows/github/deploy-pages","slug":"/workflows/github/deploy-pages/","permalink":"/docs/workflows/github/deploy-pages/","draft":false,"unlisted":false,"editUrl":"https://github.com/erzz/toolbox/tree/main/packages/create-docusaurus/templates/shared/docs/workflows/github/deploy-pages/deploy-pages.mdx","tags":[{"inline":true,"label":"github","permalink":"/docs/tags/github"},{"inline":true,"label":"pages","permalink":"/docs/tags/pages"},{"inline":true,"label":"deploy","permalink":"/docs/tags/deploy"}],"version":"current","frontMatter":{"workflow":"deploy-pages.yml","version":1,"status":"production","description":"Build and deploy an application to GitHub pages.","tags":["github","pages","deploy"]},"sidebar":"mainSidebar","previous":{"title":"GitHub","permalink":"/docs/category/github"},"next":{"title":"NodeJS","permalink":"/docs/category/nodejs"}}');var i=n(74848),o=n(28453),r=n(27802),a=n(24996),l=n(81570);n(78043);const c={workflow:"deploy-pages.yml",version:1,status:"production",description:"Build and deploy an application to GitHub pages.",tags:["github","pages","deploy"]},d="Deploy to Github Pages",u={},p=[{value:"Purpose",id:"purpose",level:2},...a.RM,{value:"Configuration Notes",id:"configuration-notes",level:2},{value:"Enable Pages",id:"enable-pages",level:3},{value:"Build authentication",id:"build-authentication",level:3},{value:"Pre commands",id:"pre-commands",level:3},{value:"Force orphan",id:"force-orphan",level:3},{value:"Disable NodeJS",id:"disable-nodejs",level:3},{value:"Additional Examples",id:"additional-examples",level:2},{value:"Run pre-commands",id:"run-pre-commands",level:3},{value:"Custom commands &amp; Auth tokens",id:"custom-commands--auth-tokens",level:3},...l.RM];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"deploy-to-github-pages",children:"Deploy to Github Pages"})}),"\n","\n",(0,i.jsx)(r.A,{status:c.status,description:c.description,tags:c.tags,screenshots:c.screenshots}),"\n",(0,i.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsx)(t.p,{children:"This workflow will build and deploy a static application to GitHub pages."}),"\n","\n",(0,i.jsx)(a.Ay,{workflow:c.workflow,version:c.version}),"\n",(0,i.jsx)(t.h2,{id:"configuration-notes",children:"Configuration Notes"}),"\n",(0,i.jsx)(t.h3,{id:"enable-pages",children:"Enable Pages"}),"\n",(0,i.jsx)(t.p,{children:"Currently, pages needs to be enabled manually in the repository settings. This is a one-time task\nwhich in the near future will also be more easily automated but the functionality is still in Alpha\nat Github."}),"\n",(0,i.jsx)(t.p,{children:"So for now, you must configure the repository Settings > Pages. Typically you would configure:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Source: Deploy from a branch"}),"\n",(0,i.jsx)(t.li,{children:"Branch: gh-pages"}),"\n",(0,i.jsx)(t.li,{children:"Directory: / (root)"}),"\n",(0,i.jsx)(t.li,{children:"Custom domain: (if you have one)"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"build-authentication",children:"Build authentication"}),"\n",(0,i.jsx)(t.p,{children:"Secrets are provided for build-time authentication with private package registries such as\nArtifactory, NPM etc."}),"\n",(0,i.jsxs)(t.p,{children:["There are options to provide an ",(0,i.jsx)(t.code,{children:"auth-token"})," and/or ",(0,i.jsx)(t.code,{children:"auth-token-2"})," where the environment variable\nthey are exposed as is configurable."]}),"\n",(0,i.jsxs)(t.p,{children:["For example you could expose ",(0,i.jsx)(t.code,{children:"auth-token: NPM_TOKEN=${{ secrets.SOME_SECRET }}"})," or\n",(0,i.jsx)(t.code,{children:"auth-token: ARTIFACTORY_AUTH_TOKEN=${{ secrets.SOME_SECRET }}"})," depending on what your build process\nrequires."]}),"\n",(0,i.jsx)(t.h3,{id:"pre-commands",children:"Pre commands"}),"\n",(0,i.jsx)(t.p,{children:"There are options to run pre-commands before the install and build of your site if required."}),"\n",(0,i.jsx)(t.h3,{id:"force-orphan",children:"Force orphan"}),"\n",(0,i.jsxs)(t.p,{children:["By default, the ",(0,i.jsx)(t.code,{children:"gh-pages"})," branch is created as an orphan branch with only the latest build. This is\nto stop your repository ballooning in size with every build due to a commit history full of compiled\nfiles. If you need to keep the history of the gh-pages branch you can disable this feature."]}),"\n",(0,i.jsx)(t.h3,{id:"disable-nodejs",children:"Disable NodeJS"}),"\n",(0,i.jsx)(t.p,{children:"This workflow assumes you will need NodeJS by default. Not every site does (Hugo for example) so the\nworkflow can be configured to disable the setup of NodeJS and shave a few seconds off the build\ntime."}),"\n",(0,i.jsx)(t.h2,{id:"additional-examples",children:"Additional Examples"}),"\n",(0,i.jsx)(t.h3,{id:"run-pre-commands",children:"Run pre-commands"}),"\n",(0,i.jsx)(t.p,{children:"Useful for installing extra binaries, dependencies or manipulating files before the build."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'deploy-pages:\n  uses: ingka-group-digital/workflows/.github/workflows/deploy-pages.yml@v2\n  with:\n    pre-commands: |\n      echo "Installing dart-sass"\n      sudo snap install dart-sass\n'})}),"\n",(0,i.jsx)(t.h3,{id:"custom-commands--auth-tokens",children:"Custom commands & Auth tokens"}),"\n",(0,i.jsxs)(t.p,{children:["Most relevant commands are customisable, even with multiple commands using the ",(0,i.jsx)(t.code,{children:"|"})," syntax. You can\npass in any environment variables you need to the commands for authentication with private package\nregistries."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'deploy-pages:\n  uses: ingka-group-digital/workflows/.github/workflows/deploy-pages.yml@v2\n  with:\n    install-command: npm ci\n  secrets:\n    auth-token: "NPM_TOKEN=${{ secrets.GH_NPM_AUTH_TOKEN }}"\n    auth-token-2: "ARTIFACTORY_AUTH_TOKEN=${{ secrets.ARTIFACTORY_AUTH_TOKEN }}"\n'})}),"\n","\n",(0,i.jsx)(l.Ay,{workflow:c.workflow,configs:c.configs})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},32368:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"workflows/nodejs/node-quality/node-quality","title":"NodeJS Quality","description":"ESLint, Prettier, TSC and Application Tests for NodeJS projects","source":"@site/docs/workflows/nodejs/node-quality/node-quality.mdx","sourceDirName":"workflows/nodejs/node-quality","slug":"/workflows/nodejs/node-quality/","permalink":"/docs/workflows/nodejs/node-quality/","draft":false,"unlisted":false,"editUrl":"https://github.com/erzz/toolbox/tree/main/packages/create-docusaurus/templates/shared/docs/workflows/nodejs/node-quality/node-quality.mdx","tags":[{"inline":true,"label":"nodejs","permalink":"/docs/tags/nodejs"},{"inline":true,"label":"javascript","permalink":"/docs/tags/javascript"},{"inline":true,"label":"typescript","permalink":"/docs/tags/typescript"},{"inline":true,"label":"eslint","permalink":"/docs/tags/eslint"},{"inline":true,"label":"prettier","permalink":"/docs/tags/prettier"},{"inline":true,"label":"tsc","permalink":"/docs/tags/tsc"},{"inline":true,"label":"test","permalink":"/docs/tags/test"}],"version":"current","frontMatter":{"workflow":"node-quality.yml","version":1,"status":"production","description":"ESLint, Prettier, TSC and Application Tests for NodeJS projects","tags":["nodejs","javascript","typescript","eslint","prettier","tsc","test"],"screenshots":[{"img":"nodejs/node-quality/eslint.png","description":"PR comments from ESLint"},{"img":"nodejs/node-quality/tsc.png","description":"PR comments from TSC"}]},"sidebar":"mainSidebar","previous":{"title":"NodeJS","permalink":"/docs/category/nodejs"},"next":{"title":"NodeJS Security","permalink":"/docs/workflows/nodejs/node-security/"}}');var i=n(74848),o=n(28453),r=n(27802),a=n(24996),l=n(81570);n(78043);const c={workflow:"node-quality.yml",version:1,status:"production",description:"ESLint, Prettier, TSC and Application Tests for NodeJS projects",tags:["nodejs","javascript","typescript","eslint","prettier","tsc","test"],screenshots:[{img:"nodejs/node-quality/eslint.png",description:"PR comments from ESLint"},{img:"nodejs/node-quality/tsc.png",description:"PR comments from TSC"}]},d="NodeJS Quality",u={},p=[{value:"Purpose",id:"purpose",level:2},...a.RM,{value:"Configuration Notes",id:"configuration-notes",level:2},{value:"Build authentication",id:"build-authentication",level:3},{value:"ESLint",id:"eslint",level:3},{value:"Prettier",id:"prettier",level:3},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Code Coverage Report as comment in Pull Requests",id:"code-coverage-report-as-comment-in-pull-requests",level:3},{value:"Additional Examples",id:"additional-examples",level:2},{value:"Disable specific jobs",id:"disable-specific-jobs",level:3},{value:"Custom commands and auth tokens",id:"custom-commands-and-auth-tokens",level:3},{value:"Tips for Script Configuration",id:"tips-for-script-configuration",level:3},{value:"ESLint HTML Report",id:"eslint-html-report",level:4},{value:"Unit Tests",id:"unit-tests-1",level:4},...l.RM,{value:"Diagram",id:"diagram",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",mermaid:"mermaid",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"nodejs-quality",children:"NodeJS Quality"})}),"\n","\n",(0,i.jsx)(r.A,{status:c.status,description:c.description,tags:c.tags,screenshots:c.screenshots}),"\n",(0,i.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsx)(t.p,{children:"This workflow is essentially a quality and style check for a NodeJS project."}),"\n",(0,i.jsx)(t.p,{children:"It uses ESLint to run checks for problems with your code, prettier to format your code and then a\njob that will execute your tests. For typescript projects, it will also run the typescript compiler\nto check for type errors."}),"\n","\n",(0,i.jsx)(a.Ay,{workflow:c.workflow,version:c.version}),"\n",(0,i.jsx)(t.h2,{id:"configuration-notes",children:"Configuration Notes"}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"The workflow itself will not provide the scripts and dependencies. It simply executes your commands\nand provide artifacts if the appropriate dependencies are installed and configured."})}),"\n",(0,i.jsx)(t.h3,{id:"build-authentication",children:"Build authentication"}),"\n",(0,i.jsx)(t.p,{children:"Secrets are provided for build-time authentication with private package registries such as\nArtifactory, NPM etc."}),"\n",(0,i.jsxs)(t.p,{children:["There are options to provide an ",(0,i.jsx)(t.code,{children:"auth-token"})," and/or ",(0,i.jsx)(t.code,{children:"auth-token-2"})," where the environment variable\nthey are exposed as is configurable."]}),"\n",(0,i.jsxs)(t.p,{children:["For example you could expose ",(0,i.jsx)(t.code,{children:"auth-token: NPM_TOKEN=${{ secrets.SOME_SECRET }}"})," or\n",(0,i.jsx)(t.code,{children:"auth-token: ARTIFACTORY_AUTH_TOKEN=${{ secrets.SOME_SECRET }}"})," depending on what your build process\nrequires."]}),"\n",(0,i.jsx)(t.h3,{id:"eslint",children:"ESLint"}),"\n",(0,i.jsxs)(t.p,{children:["By default the ESLint job utilises an action from\n",(0,i.jsx)(t.a,{href:"https://github.com/reviewdog/reviewdog",children:"reviewdog"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["To use your own ESLint script, set the eslint-command input to anything you like (e.g. `yarn\nlint",":ci",") and your command will be used instead of reviewdog."]}),"\n",(0,i.jsxs)(t.p,{children:['Reviewdog offers different "reporters" to provide feedback on your code. The default reporter is\n',(0,i.jsx)(t.code,{children:"github-check"})," which works for both ",(0,i.jsx)(t.code,{children:"push"})," and ",(0,i.jsx)(t.code,{children:"pull_request"})," events. It provides any findings in\nthe summary of the workflow as well as in the logs of the job itself."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"github-pr-check"})," works in a similar way, but only for ",(0,i.jsx)(t.code,{children:"pull_request"})," events."]}),"\n",(0,i.jsxs)(t.p,{children:["The final option ",(0,i.jsx)(t.code,{children:"github-pr-review"})," which provides review comments on the pull request itself. This\nis of course only available for ",(0,i.jsx)(t.code,{children:"pull_request"})," workflows."]}),"\n",(0,i.jsx)(t.h3,{id:"prettier",children:"Prettier"}),"\n",(0,i.jsxs)(t.p,{children:["Executes any prettier command including the option to write the changes back to the files. If you\nwant the job to commit those changes back to the branch, set the ",(0,i.jsx)(t.code,{children:"prettier-commit"})," input to true."]}),"\n",(0,i.jsx)(t.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,i.jsxs)(t.p,{children:["Executes any arbitrary test command(s). If those commands/scripts produce test or coverage reports\nthen they can be published as artifacts. See ",(0,i.jsx)(t.a,{href:"#tips-for-script-configuration",children:"configuration tips"}),"\nbelow."]}),"\n",(0,i.jsx)(t.h3,{id:"code-coverage-report-as-comment-in-pull-requests",children:"Code Coverage Report as comment in Pull Requests"}),"\n",(0,i.jsx)(t.p,{children:"To get a code coverage report as a comment in the pull request, you can use:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"node-quality:\n  uses: ingka-group-digital/workflows/.github/workflows/node-quality.yml@v2\n  with:\n    coverage-report-enable: true\n"})}),"\n",(0,i.jsx)(t.p,{children:"Make sure your test-command actually generates a coverage report, otherwise the job will fail."}),"\n",(0,i.jsx)(t.h2,{id:"additional-examples",children:"Additional Examples"}),"\n",(0,i.jsx)(t.h3,{id:"disable-specific-jobs",children:"Disable specific jobs"}),"\n",(0,i.jsx)(t.p,{children:"For example, for non-typescript projects you can disable the tsc job:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"node-quality:\n  uses: erzz/toolbox/.github/workflows/node-quality.yml@v1\n  with:\n    tsc-enable: false\n"})}),"\n",(0,i.jsx)(t.h3,{id:"custom-commands-and-auth-tokens",children:"Custom commands and auth tokens"}),"\n",(0,i.jsxs)(t.p,{children:["Most relevant commands are customisable, even with multiple commands using the ",(0,i.jsx)(t.code,{children:"|"})," syntax. You can\npass in any environment variables you need to the commands for authentication with private package\nregistries."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'node-tests:\n  uses: erzz/toolbox/.github/workflows/node-quality.yml@v1\n  with:\n    install-command: "npm ci"\n    test-command: |\n      echo "Running tests"\n      npm run test\n  secrets:\n    auth-token: "NPM_TOKEN=${{ secrets.GH_NPM_AUTH_TOKEN }}"\n    auth-token-2: "ARTIFACTORY_AUTH_TOKEN=${{ secrets.ARTIFACTORY_AUTH_TOKEN }}"\n'})}),"\n",(0,i.jsx)(t.h3,{id:"tips-for-script-configuration",children:"Tips for Script Configuration"}),"\n",(0,i.jsx)(t.p,{children:"It's difficult to give hard and fast rules about how your node project should be configured, but in\norder to produce the relevant artifacts something similar to below should be added."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["These are just examples! Hopefully you know what to do from there for your special ","\u2744\ufe0f","\nsnowflake ","\u2744\ufe0f"]})}),"\n",(0,i.jsx)(t.h4,{id:"eslint-html-report",children:"ESLint HTML Report"}),"\n",(0,i.jsx)(t.p,{children:"To produce an HTML report in your ESLint test script you would use something like:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'"lint:ci": "eslint --ext .js,.ts,.vue . -f node_modules/eslint-html-reporter/reporter.js -o $GITHUB_WORKSPACE/eslint-report.html"\n'})}),"\n",(0,i.jsx)(t.p,{children:"However, some reporters such as the one in the example above will not produce stdout output in the\njob log if they are sending it to file."}),"\n",(0,i.jsxs)(t.p,{children:["If you wish results to be published in multiple formats such as stdout, html and junit - then a\npackage such as ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/package/eslint-output",children:"eslint-output"})," works fantastic!"]}),"\n",(0,i.jsxs)(t.p,{children:["You can see ",(0,i.jsx)(t.a,{href:"https://github.com/erzz/toolbox/tree/main/tests/node-sample-app",children:"here"})," for an example."]}),"\n",(0,i.jsx)(t.h4,{id:"unit-tests-1",children:"Unit Tests"}),"\n",(0,i.jsx)(t.p,{children:"To produce code coverage and HTML reports in your unit test script, you would use something like:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'"test:unit-ci": "jest --selectProjects unit --ci --runInBand --reporters jest-html-reporter jest-junit"\n'})}),"\n",(0,i.jsx)(t.p,{children:"with a jest reporter configuration like:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"collectCoverage: true,\n  coverageReporters: ['text', 'cobertura'],\n  collectCoverageFrom: [\n    '<rootDir>/components/**/*.vue',\n    '<rootDir>/pages/**/*.vue',\n    '<rootDir>/store/**/*.ts',\n    '<rootDir>/utils/**/*.ts',\n  ],\n"})}),"\n","\n",(0,i.jsx)(l.Ay,{workflow:c.workflow,configs:c.configs}),"\n",(0,i.jsx)(t.h2,{id:"diagram",children:"Diagram"}),"\n",(0,i.jsx)(t.mermaid,{value:"flowchart LR\n    subgraph jobs\n        format[Prettier]\n        tsc[TSC]\n        test[Tests]\n        lint[ESLint]\n    end\n    subgraph Github\n      subgraph artifacts[Artifacts]\n        test -.-> utHTML[test-report.html]\n        test -.-> utXML[junit.xml]\n        test -.-> covXML[cobertura-coverage.xml]\n      end\n      lint --\x3e pr[Pull Request]\n      tsc --\x3e pr\n      format -.-> Commit\n    end"})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},86634:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"workflows/nodejs/node-security/node-security","title":"NodeJS Security","description":"Security and software composition analysis for NodeJS projects","source":"@site/docs/workflows/nodejs/node-security/node-security.mdx","sourceDirName":"workflows/nodejs/node-security","slug":"/workflows/nodejs/node-security/","permalink":"/docs/workflows/nodejs/node-security/","draft":false,"unlisted":false,"editUrl":"https://github.com/erzz/toolbox/tree/main/packages/create-docusaurus/templates/shared/docs/workflows/nodejs/node-security/node-security.mdx","tags":[{"inline":true,"label":"node","permalink":"/docs/tags/node"},{"inline":true,"label":"security","permalink":"/docs/tags/security"},{"inline":true,"label":"license","permalink":"/docs/tags/license"},{"inline":true,"label":"ghas","permalink":"/docs/tags/ghas"},{"inline":true,"label":"codeql","permalink":"/docs/tags/codeql"},{"inline":true,"label":"sbom","permalink":"/docs/tags/sbom"},{"inline":true,"label":"SAST","permalink":"/docs/tags/sast"},{"inline":true,"label":"dependencies","permalink":"/docs/tags/dependencies"},{"inline":true,"label":"ospo","permalink":"/docs/tags/ospo"},{"inline":true,"label":"compliance","permalink":"/docs/tags/compliance"}],"version":"current","frontMatter":{"workflow":"node-security.yml","version":1,"status":"production","description":"Security and software composition analysis for NodeJS projects","tags":["node","security","license","ghas","codeql","sbom","SAST","dependencies","ospo","compliance"],"configs":["trivy-ospo-licenses.yml"],"screenshots":[{"img":"nodejs/node-security/codeql.png","description":"SAST findings with CodeQL"},{"img":"nodejs/node-security/trivy-deps.png","description":"Vulnerable package findings with Trivy"},{"img":"nodejs/node-security/trivy-license.png","description":"Unknown or forbidden license findings"},{"img":"nodejs/node-security/spdx.png","description":"Software Bill of Materials (SBOM) in SPDX format"}]},"sidebar":"mainSidebar","previous":{"title":"NodeJS Quality","permalink":"/docs/workflows/nodejs/node-quality/"},"next":{"title":"Release","permalink":"/docs/category/release"}}');var i=n(74848),o=n(28453),r=n(27802),a=n(24996),l=n(81570);n(78043);const c={workflow:"node-security.yml",version:1,status:"production",description:"Security and software composition analysis for NodeJS projects",tags:["node","security","license","ghas","codeql","sbom","SAST","dependencies","ospo","compliance"],configs:["trivy-ospo-licenses.yml"],screenshots:[{img:"nodejs/node-security/codeql.png",description:"SAST findings with CodeQL"},{img:"nodejs/node-security/trivy-deps.png",description:"Vulnerable package findings with Trivy"},{img:"nodejs/node-security/trivy-license.png",description:"Unknown or forbidden license findings"},{img:"nodejs/node-security/spdx.png",description:"Software Bill of Materials (SBOM) in SPDX format"}]},d="NodeJS Security",u={},p=[{value:"Purpose",id:"purpose",level:2},...a.RM,{value:"Configuration Notes",id:"configuration-notes",level:2},{value:"Build authentication",id:"build-authentication",level:3},{value:"Additional Examples",id:"additional-examples",level:2},{value:"Disable specific jobs",id:"disable-specific-jobs",level:3},{value:"Custom commands and auth tokens",id:"custom-commands-and-auth-tokens",level:3},...l.RM,{value:"Diagram",id:"diagram",level:2}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mermaid:"mermaid",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"nodejs-security",children:"NodeJS Security"})}),"\n","\n",(0,i.jsx)(r.A,{status:c.status,description:c.description,tags:c.tags,screenshots:c.screenshots}),"\n",(0,i.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsx)(t.p,{children:"This workflow is for node projects that need to scan dependencies for vulnerabilities and licenses\nthat are not allowed by OSPO."}),"\n",(0,i.jsx)(t.p,{children:"It will also run CodeQL as a SAST tool and produce a Software Bill of Materials (SBOM)."}),"\n",(0,i.jsx)(t.p,{children:"All jobs are integrated with GitHub Advanced Security (GHAS) and will produce findings in the\nSecurity tab of your repository."}),"\n","\n",(0,i.jsx)(a.Ay,{workflow:c.workflow,version:c.version}),"\n",(0,i.jsx)(t.h2,{id:"configuration-notes",children:"Configuration Notes"}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"The workflow itself will not provide the scripts and dependencies. It simply executes your commands\nand provide artifacts if the appropriate dependencies are installed and configured."})}),"\n",(0,i.jsx)(t.h3,{id:"build-authentication",children:"Build authentication"}),"\n",(0,i.jsx)(t.p,{children:"Secrets are provided for build-time authentication with private package registries such as\nArtifactory, NPM etc."}),"\n",(0,i.jsxs)(t.p,{children:["There are options to provide an ",(0,i.jsx)(t.code,{children:"auth-token"})," and/or ",(0,i.jsx)(t.code,{children:"auth-token-2"})," where the environment variable\nthey are exposed as is configurable."]}),"\n",(0,i.jsxs)(t.p,{children:["For example you could expose ",(0,i.jsx)(t.code,{children:"auth-token: NPM_TOKEN=${{ secrets.SOME_SECRET }}"})," or\n",(0,i.jsx)(t.code,{children:"auth-token: ARTIFACTORY_AUTH_TOKEN=${{ secrets.SOME_SECRET }}"})," depending on what your build process\nrequires."]}),"\n",(0,i.jsx)(t.h2,{id:"additional-examples",children:"Additional Examples"}),"\n",(0,i.jsx)(t.h3,{id:"disable-specific-jobs",children:"Disable specific jobs"}),"\n",(0,i.jsx)(t.p,{children:"For example, to disable the licence scanning job:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"node-security:\n  uses: erzz/toolbox/.github/workflows/node-security.yml@v1\n  with:\n    licence-enable: false\n"})}),"\n",(0,i.jsx)(t.h3,{id:"custom-commands-and-auth-tokens",children:"Custom commands and auth tokens"}),"\n",(0,i.jsxs)(t.p,{children:["Most relevant commands are customisable, even with multiple commands using the ",(0,i.jsx)(t.code,{children:"|"})," syntax. You can\npass in any environment variables you need to the commands for authentication with private package\nregistries."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'node-security:\n  uses: erzz/toolbox/.github/workflows/node-security.yml@v1\n  with:\n    install-command: |\n      cp .env.example .env\n      npm ci\n  secrets:\n    auth-token: "NPM_TOKEN=${{ secrets.GH_NPM_AUTH_TOKEN }}"\n    auth-token-2: "ARTIFACTORY_AUTH_TOKEN=${{ secrets.ARTIFACTORY_AUTH_TOKEN }}"\n'})}),"\n","\n",(0,i.jsx)(l.Ay,{workflow:c.workflow,configs:c.configs}),"\n",(0,i.jsx)(t.h2,{id:"diagram",children:"Diagram"}),"\n",(0,i.jsx)(t.mermaid,{value:"flowchart LR\n    subgraph jobs\n        codeql[CodeQL]\n        deps[Dependency Scan]\n        licences[Licence Scan]\n        sbom[SBOM]\n    end\n    subgraph Github\n      subgraph artifacts[Artifacts]\n        codeql --\x3e codeqlSARIF[SARIF]\n        deps --\x3e depsSARIF[SARIF]\n        licences --\x3e licencesSARIF[SARIF]\n        sbom --\x3e SPDX\n      end\n      subgraph ghas[GHAS Security Tab]\n        codeql --\x3e codeqlFindings[Findings]\n        deps --\x3e depsFindings[Findings]\n        licences --\x3e licencesFindings[Findings]\n      end\n    end"})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},98225:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"workflows/release/semantic-release/semantic-release","title":"Semantic Release","description":"Automate the release process with versioning, CHANGELOG.md, release notes, package publishing etc","source":"@site/docs/workflows/release/semantic-release/semantic-release.mdx","sourceDirName":"workflows/release/semantic-release","slug":"/workflows/release/semantic-release/","permalink":"/docs/workflows/release/semantic-release/","draft":false,"unlisted":false,"editUrl":"https://github.com/erzz/toolbox/tree/main/packages/create-docusaurus/templates/shared/docs/workflows/release/semantic-release/semantic-release.mdx","tags":[{"inline":true,"label":"release","permalink":"/docs/tags/release"},{"inline":true,"label":"semantic","permalink":"/docs/tags/semantic"},{"inline":true,"label":"commit-convention","permalink":"/docs/tags/commit-convention"},{"inline":true,"label":"changelog","permalink":"/docs/tags/changelog"},{"inline":true,"label":"versioning","permalink":"/docs/tags/versioning"},{"inline":true,"label":"release-notes","permalink":"/docs/tags/release-notes"}],"version":"current","frontMatter":{"workflow":"semantic-release.yml","version":1,"status":"production","description":"Automate the release process with versioning, CHANGELOG.md, release notes, package publishing etc","screenshots":[{"img":"release/semantic-release/gh.png","description":"Automatic versioning and release notes"},{"img":"release/semantic-release/workflow.png","description":"Optional floating tag creation"}],"tags":["release","semantic","commit-convention","changelog","versioning","release-notes"],"configs":["semantic-release/generic.json","semantic-release/pom.json"]},"sidebar":"mainSidebar","previous":{"title":"Release","permalink":"/docs/category/release"}}');var i=n(74848),o=n(28453),r=n(27802),a=n(24996),l=n(81570);n(78043);const c={workflow:"semantic-release.yml",version:1,status:"production",description:"Automate the release process with versioning, CHANGELOG.md, release notes, package publishing etc",screenshots:[{img:"release/semantic-release/gh.png",description:"Automatic versioning and release notes"},{img:"release/semantic-release/workflow.png",description:"Optional floating tag creation"}],tags:["release","semantic","commit-convention","changelog","versioning","release-notes"],configs:["semantic-release/generic.json","semantic-release/pom.json"]},d="Semantic Release",u={},p=[{value:"Purpose",id:"purpose",level:2},...a.RM,{value:"Configuration Notes",id:"configuration-notes",level:2},{value:"Behaviour",id:"behaviour",level:3},{value:"GITHUB_TOKEN or PAT",id:"github_token-or-pat",level:3},{value:"Jira linking",id:"jira-linking",level:3},{value:"Floating tags",id:"floating-tags",level:3},{value:"Updating pom.xml version",id:"updating-pomxml-version",level:3},{value:"Build authentication",id:"build-authentication",level:3},{value:"Additional Examples",id:"additional-examples",level:2},{value:"Use your own configuration",id:"use-your-own-configuration",level:3},{value:"Maven projects and using a maven settings file",id:"maven-projects-and-using-a-maven-settings-file",level:3},...l.RM];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"semantic-release",children:"Semantic Release"})}),"\n","\n",(0,i.jsx)(r.A,{status:c.status,description:c.description,tags:c.tags,screenshots:c.screenshots}),"\n",(0,i.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsxs)(t.p,{children:["Semantic Release automates the creation of a release and related tasks. It depends on a commit\nconvention being used in your repository and by default it assumes that you use the\n",(0,i.jsx)(t.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"Conventional Commits"})," convention. It can be\nconfigured to handle any sequence of events, such as:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"automated decision of whether or not a release should be made"}),"\n",(0,i.jsx)(t.li,{children:"automated semantic versioning"}),"\n",(0,i.jsx)(t.li,{children:"automated release notes"}),"\n",(0,i.jsx)(t.li,{children:"automated changelog committed back to repository"}),"\n",(0,i.jsx)(t.li,{children:"publishing packages/binaries etc"}),"\n",(0,i.jsx)(t.li,{children:"and more - provide your own configuration to handle any custom task"}),"\n"]}),"\n",(0,i.jsx)(a.Ay,{workflow:c.workflow,version:c.version}),"\n",(0,i.jsx)(t.h2,{id:"configuration-notes",children:"Configuration Notes"}),"\n",(0,i.jsx)(t.h3,{id:"behaviour",children:"Behaviour"}),"\n",(0,i.jsxs)(t.p,{children:["The behaviour of this workflow is configured via a configuration file. There is a\n",(0,i.jsx)(t.a,{href:"https://github.com/erzz/toolbox/blob/main/configs/semantic-release/generic.json",children:"standard configuration"}),"\nfile provided by the workflow which can be used as a starting point."]}),"\n",(0,i.jsxs)(t.p,{children:["This configuration can be disabled by setting the ",(0,i.jsx)(t.code,{children:"default-config"})," input to ",(0,i.jsx)(t.code,{children:"false"})," and providing\nyour own configuration file in your repository. See the\n",(0,i.jsx)(t.a,{href:"https://semantic-release.gitbook.io/semantic-release/usage/configuration",children:"semantic-release docs"}),"\nfor more information about providing your own configuration."]}),"\n",(0,i.jsx)(t.h3,{id:"github_token-or-pat",children:"GITHUB_TOKEN or PAT"}),"\n",(0,i.jsxs)(t.p,{children:["If the secret ",(0,i.jsx)(t.code,{children:"token"})," is ",(0,i.jsx)(t.strong,{children:"not"})," provided, then the workflow will run as and release as the Github\nBot user. This may not work if certain branch protection mechanisms are in place in which case you\nshould provide a personal access token (PAT) for a user with the necessary permissions."]}),"\n",(0,i.jsxs)(t.p,{children:["Ensure that the user has at least the ",(0,i.jsx)(t.code,{children:"maintainer"})," role in the repository and that the token has the\nrelevant scopes for all the types of activities you want to perform via semantic-release."]}),"\n",(0,i.jsx)(t.p,{children:"If you store the PAT in Hashicorp Vault, you can use it directly from by enabling OIDC\nAuthentication between Github Actions and Vault."}),"\n",(0,i.jsx)(t.h3,{id:"jira-linking",children:"Jira linking"}),"\n",(0,i.jsxs)(t.p,{children:["The default configuration includes an item that automatically creates JIRA issues links in the\nrelease notes from commit messages using the closes, fixes, resolves keywords using a regex match of\n",(0,i.jsx)(t.code,{children:"[A-Za-z]{2,10}-[0-9]{1,5}"})]}),"\n",(0,i.jsx)(t.p,{children:"To customise the regex or behaviour, provide your own configuration file in your repository."}),"\n",(0,i.jsx)(t.h3,{id:"floating-tags",children:"Floating tags"}),"\n",(0,i.jsx)(t.p,{children:"An input is provided to automatically create/update floating tags for the major version."}),"\n",(0,i.jsxs)(t.p,{children:["For example when releasing version ",(0,i.jsx)(t.code,{children:"v1.2.3"}),", a tag of ",(0,i.jsx)(t.code,{children:"v1"})," will be created (if one doesn't exist) or\nwill be updated to point to the same commit as ",(0,i.jsx)(t.code,{children:"v1.2.3"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"updating-pomxml-version",children:"Updating pom.xml version"}),"\n",(0,i.jsx)(t.p,{children:"Useful in the case of maven project where you want the pom to be updated with the released version."}),"\n",(0,i.jsxs)(t.p,{children:["This requires an alternative configuration provided by the workflow by enabling the\n",(0,i.jsx)(t.code,{children:"update-pom: true"})," input."]}),"\n",(0,i.jsx)(t.h3,{id:"build-authentication",children:"Build authentication"}),"\n",(0,i.jsx)(t.p,{children:"Secrets are provided for build-time authentication with private package registries such as\nArtifactory, NPM etc."}),"\n",(0,i.jsxs)(t.p,{children:["There are options to provide an ",(0,i.jsx)(t.code,{children:"auth-token"})," and/or ",(0,i.jsx)(t.code,{children:"auth-token-2"})," where the environment variable\nthey are exposed as is configurable."]}),"\n",(0,i.jsxs)(t.p,{children:["For example you could expose ",(0,i.jsx)(t.code,{children:"auth-token: NPM_TOKEN=${{ secrets.SOME_SECRET }}"})," or\n",(0,i.jsx)(t.code,{children:"auth-token: ARTIFACTORY_AUTH_TOKEN=${{ secrets.SOME_SECRET }}"})," depending on what your build process\nrequires."]}),"\n",(0,i.jsxs)(t.p,{children:["There is also an option to write a file from a secret using the ",(0,i.jsx)(t.code,{children:"create-sensitive-file"})," input which\nis useful for creating a maven-settings.xml file for example."]}),"\n",(0,i.jsx)(t.h2,{id:"additional-examples",children:"Additional Examples"}),"\n",(0,i.jsx)(t.h3,{id:"use-your-own-configuration",children:"Use your own configuration"}),"\n",(0,i.jsxs)(t.p,{children:["Add your own .releaserc.json file to your repository and set the ",(0,i.jsx)(t.code,{children:"default-config"})," input to ",(0,i.jsx)(t.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"release:\n  uses: erzz/toolbox/.github/workflows/semantic-release.yml@v1\n  with:\n    default-config: false\n  secrets:\n    token: ${{ secrets.RELEASE_TOKEN }}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"maven-projects-and-using-a-maven-settings-file",children:"Maven projects and using a maven settings file"}),"\n",(0,i.jsxs)(t.p,{children:["With this combination of ",(0,i.jsx)(t.code,{children:"mvn-settings: true"})," and ",(0,i.jsx)(t.code,{children:"mvn-settings-file:"})," a special version of the\nworkflow will run which will give the ability to both set a maven-settings file plus a\nsemantic-release configuration that also updates pom.xml with the newly released version."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"release:\n  uses: erzz/toolbox/.github/workflows/semantic-release.yml@v1\n  with:\n    default-config: false\n    create-sensitive-file: true\n    sensitive-file-path: maven-settings.xml\n  secrets:\n    token: ${{ secrets.RELEASE_TOKEN }}\n    sensitive-file-content: ${{ secrets.MAVEN_SETTINGS_FILE }}\n"})}),"\n",(0,i.jsx)(l.Ay,{workflow:c.workflow,configs:c.configs})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},78043:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var s=n(31661),i=n.n(s),o=n(15824),r=n(24913),a=n(38088),l=n(74848);function c(e){let t=e.screenshots;function s(e){const t=n(53094)("./"+e.item.img).default;return(0,l.jsxs)(r.A,{variant:"plain",children:[(0,l.jsx)(o.A,{variant:"soft",objectFit:"contain",maxHeight:"400px",children:(0,l.jsx)("img",{src:t,alt:e.item.description})}),(0,l.jsx)(a.Ay,{level:"title-sm",children:e.item.description})]})}return(0,l.jsx)("div",{children:(0,l.jsx)(i(),{children:t.map(((e,t)=>(0,l.jsx)(s,{item:e},t)))})})}},27802:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var s=n(52362),i=n(56289);const o={container:"container_AzjM",badge:"badge_RM0_",admonition:"admonition_TDuH"};var r=n(78043),a=n(74848);function l(e){let t,n,l="Status: "+e.status;switch(e.status){case"experimental":t="warning",l="Status: experimental",n="This workflow is relatively new and and not yet battle-hardened for all cases";break;case"production":t="tip",l="Status: production",n="This workflow is stable and widely used in production environments.";break;case"deprecated":t="danger",l="Status: deprecated",n="This workflow is no longer maintained. It may be removed in a future release.";break;default:t="info",l="Status: unknown",n="This workflow has not been classified with a status."}return(0,a.jsxs)("div",{children:[(0,a.jsx)(s.A,{type:t,title:l,children:n}),(0,a.jsx)("div",{className:o.container,children:(0,a.jsx)("div",{children:(0,a.jsx)("strong",{children:e.description})})}),e.screenshots&&e.screenshots.length>0&&(0,a.jsx)(r.A,{screenshots:e.screenshots}),e.tags.includes("ghas")?(0,a.jsxs)(s.A,{type:"info",title:"This workflow requires GitHub Advanced Security",children:["You can find instructions to enable it"," ",(0,a.jsx)(i.A,{to:"/docs/tutorials-and-guides/ghas",children:"here"})]}):null,e.tags.includes("codeql")?(0,a.jsxs)(s.A,{type:"tip",title:"CodeQL does not 'break the build'",children:[(0,a.jsx)("p",{children:"This workflow uses a CodeQL job. GitHub does not provide a method to break the build with CodeQL, it only reports findings to the Security tab."}),(0,a.jsxs)("p",{children:["It is ",(0,a.jsx)("strong",{children:"highly recommended"})," to"," ",(0,a.jsx)(i.A,{to:"/docs/tutorials-and-guides/ghas#protection-rules-for-codeql",children:"add a protection rule to your repository"})," ","which will prevent merging of pull requests that introduce new CodeQL findings of significant severity."]})]}):null]})}},27508:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/eslint-23a7154a2da0f52cbe54852fa967a860.png"},21137:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/tsc-276e1d16b7e945c9cffde0bab9ea0751.png"},11208:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/codeql-39078144b910ab7bf962c407dc7b22dc.png"},64173:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/spdx-a2bc46cfde2227a22c6bf0c72f1f9462.png"},12791:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/trivy-deps-8ba2c03864ef0f85d2cf64c8dcfac042.png"},64964:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/trivy-license-492900ab392bc3994cef3a7b46efa862.png"},74410:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/gh-367908e93cb205c4a2f914abb887f0db.png"},2040:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s=n.p+"assets/images/workflow-b5eedeb7f4194920cbb9939a58344597.png"},14163:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"Deploy Docs",on:{push:{branches:["main"]}},jobs:{"deploy-pages":{uses:"./.github/workflows/deploy-pages.yml",with:{cname:"toolbox.erzz.com"}}}}},5389:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"Test Docs",on:"push",jobs:{quality:{uses:"./.github/workflows/node-quality.yml",with:{"eslint-command":"yarn lint:ci","test-command":"yarn build","prettier-command":"yarn style","tsc-enable":!1}},security:{uses:"./.github/workflows/node-security.yml"}}}},45363:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"Deploy to GitHub Pages",permissions:{pages:"write","id-token":"write",contents:"write"},on:{workflow_call:{inputs:{"install-command":{type:"string",description:"The command to install dependencies required to build site",required:!1,default:"yarn install"},"build-command":{type:"string",description:"The command to build the site",required:!1,default:"yarn build"},"publish-dir":{type:"string",description:"The directory, containing the built site, to publish",required:!1,default:"./build"},"force-orphan":{type:"boolean",description:"Prevent your repo from bloating by using only the latest commit for gh-pages branch",required:!1,default:!0},cname:{type:"string",description:"If fronting with a custom domain, specify the cname",required:!1},"setup-node":{type:"boolean",description:"To install a custom version of NodeJS, set to true",required:!1,default:!0},"node-version":{type:"string",description:"The version of NodeJS to install",required:!1,default:"20"},"pre-commands":{type:"string",description:"Commands to run before building the site. Use | for multiple commands",required:!1},artifact:{type:"boolean",description:"If true, the built site will be uploaded as an artifact (can be slow!)",required:!1,default:!1}},secrets:{"auth-token":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"},"auth-token-2":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"}}}},jobs:{deploy:{name:"Deploy to pages","runs-on":"ubuntu-latest",steps:[{name:"Checkout",uses:"actions/checkout@v4",with:{"fetch-depth":0}},{name:"Setup NodeJS",if:"${{ inputs.setup-node == 'true' }}",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Run pre-commands",run:"${{ inputs.pre-commands }}\n"},{name:"Build Site",run:"${{ inputs.install-command }}\n${{ inputs.build-command }}\n"},{name:"Deploy",uses:"peaceiris/actions-gh-pages@v4",with:{github_token:"${{ github.token }}",publish_dir:"${{ inputs.publish-dir }}",cname:"${{ inputs.cname }}",force_orphan:"${{ inputs.force-orphan }}"}},{name:"Upload site as artifact",uses:"actions/upload-artifact@v4",if:"${{ inputs.artifact == 'true' }}",with:{name:"Site",path:"${{ inputs.publish-dir }}"}}]}}}},7037:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"NodeJS Quality",permissions:{checks:"write",contents:"write","pull-requests":"write"},on:{workflow_call:{inputs:{"node-version":{type:"string",description:"The version of NodeJS to use",required:!1,default:"20"},"install-command":{required:!1,type:"string",description:"Used to override the default command to install your dependencies e.g. yarn install",default:"yarn install --silent"},path:{required:!1,type:"string",description:"Relative path from project root to your node application's source files",default:"."},"eslint-enable":{required:!1,type:"boolean",description:"To disable the eslint job set to false",default:!0},"eslint-command":{required:!1,type:"string",description:"Use to execute a standard ES Lint command (e.g. npm lint:ci) instead of the reviewdog action"},"eslint-report-path":{required:!1,type:"string",description:"Relative path to any eslint report file(s) you wish to persist as job artifacts (e.g. eslint-report.*)"},"eslint-flags":{required:!1,type:"string",description:"Provide additional flags to the eslint command",default:". --ext .js,.jsx,.ts,.tsx"},"eslint-reporter":{required:!1,type:"string",description:"Choose the reporter to use for eslint (github-pr-review, github-pr-check, github-check)",default:"github-check"},"eslint-level":{required:!1,type:"string",description:"Choose the level of eslint to use (error, warning, info)",default:"error"},"eslint-fail-on-error":{required:!1,type:"boolean",description:"To not fail the job on eslint errors set to false",default:!0},"test-enable":{required:!1,type:"boolean",description:"To disable the unit-tests job set to false",default:!0},"test-command":{required:!1,type:"string",description:"Used to override the default command to run your unit tests",default:"yarn test:unit-ci"},"coverage-report-enable":{required:!1,type:"boolean",description:"To enable PR coverage report set to true. Requires that the test-command generates a 'coverage/cobertura-coverage.xml' file.",default:!1},"prettier-enable":{required:!1,type:"boolean",description:"To disable the prettier job set to false",default:!0},"prettier-command":{required:!1,type:"string",description:"Used to override the default command to run prettier",default:"yarn prettier:ci"},"prettier-commit":{required:!1,type:"boolean",description:"If using the write mode of prettier, you can set to true if you wish to commit the changes back to the repository",default:!1},"tsc-enable":{required:!1,type:"boolean",description:"To disable the tsc job set to false",default:!0},"tsc-flags":{required:!1,type:"string",description:"Provide additional flags to the tsc command"},"tsc-reporter":{required:!1,type:"string",description:"Choose the reporter to use for tsc (github-pr-review, github-pr-check, github-check)",default:"github-check"},"tsc-level":{required:!1,type:"string",description:"Choose the level of tsc to use (error, warning, info)",default:"error"},"tsc-fail-on-error":{required:!1,type:"boolean",description:"To not fail the job on tsc errors set to false",default:!0},"artifact-prefix":{type:"string",description:"A prefix to apply to the name of the artifacts to upload (useful for matrix builds)",required:!1}},secrets:{"auth-token":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"},"auth-token-2":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"}},outputs:{"ref-slug":{description:"A URL sanitized version of the github ref",value:"${{ jobs.lint.outputs.ref-slug }}"},"short-sha":{description:"Captures the short SHA for use in this or later workflow jobs",value:"${{ jobs.lint.outputs.short-sha }}"}}}},jobs:{lint:{name:"Lint",if:"${{ inputs.eslint-enable }}","runs-on":"ubuntu-24.04",outputs:{"short-sha":"${{ env.GITHUB_SHA_SHORT }}","ref-slug":"${{ env.GITHUB_REF_SLUG_URL }}"},steps:[{name:"Checkout Source",uses:"actions/checkout@v4"},{name:"Slugify github variables",uses:"rlespinasse/github-slug-action@v5.0.0"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Install Dependencies","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Execute ESLint (command)","working-directory":"${{ inputs.path }}",if:"${{ inputs.eslint-command }}",run:"${{ inputs.eslint-command }}\n"},{name:"Upload artifacts (ES Lint Report)",uses:"actions/upload-artifact@v4",if:"inputs.eslint-command && inputs.eslint-report-path",with:{name:"${{ inputs.artifact-prefix }}ES Lint Report",path:"${{ inputs.eslint-report-path }}"}},{name:"Execute ESLint (reviewdog)",if:"${{ !inputs.eslint-command }}",uses:"reviewdog/action-eslint@v1",with:{workdir:"${{ inputs.path }}",github_token:"${{ secrets.GITHUB_TOKEN }}",reporter:"${{ inputs.eslint-reporter }}",eslint_flags:"${{ inputs.eslint-flags }}",level:"${{ inputs.eslint-level }}",fail_on_error:"${{ inputs.eslint-fail-on-error }}"}}]},prettier:{name:"Prettier",if:"${{ inputs.prettier-enable }}","runs-on":"ubuntu-24.04",steps:[{name:"Checkout Source",uses:"actions/checkout@v4"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export variables",run:'echo "${{ secrets.auth-token }}" >> $GITHUB_ENV\necho "${{ secrets.auth-token-2 }}" >> $GITHUB_ENV\n'},{name:"Install Dependencies","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Prettier","working-directory":"${{ inputs.path }}",run:"${{ inputs.prettier-command }}\n"},{name:"Commit prettier changes",if:"${{ inputs.prettier-commit }}",uses:"EndBug/add-and-commit@v9",with:{message:"style: apply prettier formatting"}}]},tests:{name:"Tests","runs-on":"ubuntu-24.04",if:"${{ inputs.test-enable }}",steps:[{name:"Checkout Source",uses:"actions/checkout@v4"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export variables",run:'echo "${{ secrets.auth-token }}" >> $GITHUB_ENV\necho "${{ secrets.auth-token-2 }}" >> $GITHUB_ENV\n'},{name:"Install Dependencies","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Execute Tests","working-directory":"${{ inputs.path }}",run:"${{ inputs.test-command }}\n"},{name:"Generate Coverage Report",uses:"clearlyip/code-coverage-report-action@v5",id:"code_coverage_report_action",if:"inputs.coverage-report-enable && github.actor != 'dependabot[bot]'",with:{filename:"${{ inputs.path }}/coverage/cobertura-coverage.xml",artifact_download_workflow_names:"${{ github.workflow }}"}},{name:"Add Coverage PR Comment",uses:"marocchino/sticky-pull-request-comment@v2",if:"inputs.coverage-report-enable && steps.code_coverage_report_action.outputs.file != '' && github.event_name == 'pull_request' && (success() || failure())",with:{recreate:!0,path:"code-coverage-results.md"}},{name:"Upload Unit Test Reports",uses:"actions/upload-artifact@v4",if:"always()",with:{name:"${{ inputs.artifact-prefix }}Unit Test & Coverage Reports",path:"${{ inputs.path }}/junit.xml\n${{ inputs.path }}/test-report.html\n${{ inputs.path }}/coverage/test-report.html\n${{ inputs.path }}/coverage/cobertura-coverage.xml\n"}}]},tsc:{name:"TSC",if:"${{ inputs.tsc-enable }}","runs-on":"ubuntu-24.04",steps:[{name:"Checkout Source",uses:"actions/checkout@v4"},{name:"Slugify github variables",uses:"rlespinasse/github-slug-action@v5.0.0"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Install Dependencies","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Execute TSC",uses:"EPMatt/reviewdog-action-tsc@v1",with:{workdir:"${{ inputs.path }}",github_token:"${{ secrets.GITHUB_TOKEN }}",reporter:"${{ inputs.tsc-reporter }}",tsc_flags:"${{ inputs.tsc-flags }}",level:"${{ inputs.tsc-level }}",fail_on_error:"${{ inputs.tsc-fail-on-error }}"}}]}}}},9980:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"NodeJS Security",permissions:{actions:"read",checks:"write",contents:"read","id-token":"write","security-events":"write","pull-requests":"write"},env:{TRIVY_DB_REPOSITORY:"public.ecr.aws/aquasecurity/trivy-db:2",TRIVY_JAVA_DB_REPOSITORY:"public.ecr.aws/aquasecurity/trivy-java-db:1",TRIVY_CACHE_DIR:"${{ github.workspace }}/.cache/trivy"},on:{workflow_call:{inputs:{"node-version":{type:"string",description:"To version of NodeJS to use",required:!1,default:"20"},"install-command":{required:!1,type:"string",description:"Used to override the default command to install your dependencies e.g. yarn install",default:"yarn install --silent"},path:{required:!1,type:"string",description:"Relative path from project root to your node application's source files",default:"."},"codeql-enable":{required:!1,type:"boolean",description:"To disable the CodeQL job set to false",default:!0},"codeql-language":{required:!1,type:"string",description:"One of `javascript` or `typescript`. Determines CodeQL configuration",default:"javascript"},"deps-enable":{required:!1,type:"boolean",description:"To disable the dependency scanning job set to false",default:!0},"deps-severity":{required:!1,type:"string",description:"The minimum severity to report",default:"MEDIUM,HIGH,CRITICAL"},"deps-timeout":{required:!1,type:"string",description:"The maximum time to wait for the scan to complete",default:"10m"},"licence-enable":{required:!1,type:"boolean",description:"To disable the licence scanning job set to false",default:!0},"licence-default":{required:!1,type:"boolean",description:"To use your own licence configuration set to false and provide a licence-config",default:!0},"licence-config":{required:!1,type:"string",description:"The relative path to your own trivy config file for license scanning e.g. `licenses.yml`",default:"licenses.yml"},"sbom-enable":{required:!1,type:"boolean",description:"To disable the SBOM job set to false",default:!0},"artifact-prefix":{type:"string",description:"A prefix to apply to the name of the artifacts to upload (useful for matrix builds)",required:!1},"trivy-version":{required:!1,type:"string",description:"Override the version of Trivy (deps/license/sbom) to utilise"},"trivy-db-cache":{required:!1,type:"boolean",description:"Enable caching of the Trivy DB (deps/license/sbom)",default:!0}},secrets:{"auth-token":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"},"auth-token-2":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"}},outputs:{"codeql-artifact-id":{description:"The unique id of the codeql SARIF artifact",value:"${{ jobs.sast.outputs.artifact-id }}"},"codeql-artifact-url":{description:"The download URL of the codeql SARIF artifact",value:"${{ jobs.sast.outputs.artifact-url }}"},"ref-slug":{description:"A URL sanitized version of the github ref",value:"${{ jobs.sast.outputs.ref-slug }}"},"short-sha":{description:"Captures the short SHA for use in this or later workflow jobs",value:"${{ jobs.sast.outputs.short-sha }}"}}}},jobs:{sast:{name:"CodeQL SAST",if:"${{ inputs.codeql-enable }}","runs-on":"ubuntu-24.04",outputs:{"artifact-id":"${{ steps.upload.outputs.artifact-id }}","artifact-url":"${{ steps.upload.outputs.artifact-url }}"},steps:[{name:"Checkout Source",uses:"actions/checkout@v4"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Run install command","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Initialize CodeQL",uses:"github/codeql-action/init@v3",with:{languages:"${{ inputs.codeql-language }}"}},{name:"Perform CodeQL Analysis",id:"codeql",uses:"github/codeql-action/analyze@v3"},{name:"Upload Reports",id:"upload",uses:"actions/upload-artifact@v4",if:"always()",with:{name:"${{ inputs.artifact-prefix }}CodeQL SARIF Report",path:"${{ steps.codeql.outputs.sarif-output }}"}}]},deps:{name:"Dependency Scan",if:"${{ inputs.deps-enable }}","runs-on":"ubuntu-24.04",steps:[{name:"Checkout Source",uses:"actions/checkout@v4"},{name:"Install Trivy",uses:"aquasecurity/setup-trivy@v0.2.2",with:{version:"${{ inputs.trivy-version }}",cache:!0}},{name:"Create cache directory",run:'echo "Creating Trivy cache directory ${{ env.TRIVY_CACHE_DIR }}..."\nmkdir -p ${{ env.TRIVY_CACHE_DIR }}\n'},{name:"Get current date",if:"${{ inputs.trivy-db-cache }}",id:"date",shell:"bash",run:"echo \"date=$(date +'%Y-%m-%d')\" >> $GITHUB_OUTPUT"},{name:"Restore DB from cache",if:"${{ inputs.trivy-db-cache }}",uses:"actions/cache@v4",with:{path:"${{ env.TRIVY_CACHE_DIR }}",key:"cache-trivy-${{ steps.date.outputs.date }}","restore-keys":"cache-trivy-"}},{name:"Execute Scan",run:"trivy --version\ntree ${{ env.TRIVY_CACHE_DIR }}\ntrivy repo \\\n  --format json \\\n  --output dependency-scan.json \\\n  --ignore-unfixed \\\n  --severity ${{ inputs.deps-severity }} \\\n  --exit-code 0 \\\n  --timeout ${{ inputs.deps-timeout }} \\\n  --cache-dir ${{ env.TRIVY_CACHE_DIR }} \\\n  ${{ inputs.path }}\n"},{name:"Results",run:'if [ $(jq \'[.Results[] | .Vulnerabilities | length] | add\' dependency-scan.json) -gt 0 ]; then\n  echo "\u274c Vulnerabilities found"\n  trivy convert \\\n    --format table \\\n    dependency-scan.json\n  exit 1\nelse\n  echo "\u2728 No vulnerabilities found"\n  exit 0\nfi\n'},{name:"Generate SARIF report",if:"always()",run:"trivy convert \\\n  --format sarif \\\n  --output dependency-scan.sarif \\\n  dependency-scan.json\n"},{name:"Upload artifacts",uses:"actions/upload-artifact@v4",if:"always()",with:{name:"${{ inputs.artifact-prefix }}Dependency SARIF Report",path:"dependency-scan.sarif"}},{name:"Upload results to GitHub Security",if:"always()",uses:"github/codeql-action/upload-sarif@v3",with:{sarif_file:"dependency-scan.sarif"}}]},"license-scan":{name:"License Scan",if:"${{ inputs.licence-enable }}","runs-on":"ubuntu-24.04",steps:[{name:"Checkout the code",uses:"actions/checkout@v4"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Get Configuration",if:"${{ inputs.licence-default }}",run:"echo \"Fetching default configuration from erzz/toolbox/configs...\"\ncurl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \\\n  --header 'Accept: application/vnd.github.v3.raw' \\\n  --location https://api.github.com/repos/erzz/toolbox/contents/configs/license-scan/licenses.yml \\\n  --fail \\\n  --output ${{ inputs.licence-config }} || exit 1\ncat ${{ inputs.licence-config }}\n"},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Run install command","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Install Trivy",uses:"aquasecurity/setup-trivy@v0.2.2",with:{version:"${{ inputs.trivy-version }}",cache:!0}},{name:"Create cache directory",run:'echo "Creating Trivy cache directory ${{ env.TRIVY_CACHE_DIR }}..."\nmkdir -p ${{ env.TRIVY_CACHE_DIR }}\n'},{name:"Get current date",if:"${{ inputs.trivy-db-cache }}",id:"date",shell:"bash",run:"echo \"date=$(date +'%Y-%m-%d')\" >> $GITHUB_OUTPUT"},{name:"Restore DB from cache",if:"${{ inputs.trivy-db-cache }}",uses:"actions/cache@v4",with:{path:"${{ env.TRIVY_CACHE_DIR }}",key:"cache-trivy-${{ steps.date.outputs.date }}","restore-keys":"cache-trivy-"}},{name:"Execute Scan",run:'if [ ! -f .trivyignore ]; then\n  echo "Creating .trivyignore..."\n  touch .trivyignore\nfi\ntrivy --version\ntree ${{ env.TRIVY_CACHE_DIR }}\ntrivy rootfs \\\n  --format json \\\n  --output license-results.json \\\n  --exit-code 0 \\\n  --config ${{ inputs.licence-config }} \\\n  --cache-dir ${{ env.TRIVY_CACHE_DIR }} \\\n  ${{ inputs.path }}\n'},{name:"Results",run:'if [ $(jq \'[.Results[] | .Licenses | length] | add\' license-results.json) -gt 0 ]; then\n  echo "\u274c Possible license issues found"\n  trivy convert \\\n    --format table \\\n    license-results.json\n  exit 1\nelse\n  echo "\u2728 No license issues found"\n  exit 0\nfi\n'},{name:"Generate SARIF report",if:"always()",run:"trivy convert \\\n  --format sarif \\\n  --output license-results.sarif \\\n  license-results.json\n"},{name:"Upload artifacts",uses:"actions/upload-artifact@v4",if:"always()",with:{name:"${{ inputs.artifact-prefix }}Licences SARIF Report",path:"license-results.sarif"}},{name:"Upload results to GitHub Security",if:"always()",uses:"github/codeql-action/upload-sarif@v3",with:{sarif_file:"license-results.sarif"}}]},sbom:{name:"SBOM","runs-on":"ubuntu-24.04",steps:[{name:"Checkout the code",uses:"actions/checkout@v4"},{name:"Setup NodeJS",uses:"actions/setup-node@v4",with:{"node-version":"${{ inputs.node-version }}"}},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Run install command","working-directory":"${{ inputs.path }}",run:"${{ inputs.install-command }}\n"},{name:"Install Trivy",uses:"aquasecurity/setup-trivy@v0.2.2",with:{version:"${{ inputs.trivy-version }}",cache:!0}},{name:"Create cache directory",run:'echo "Creating Trivy cache directory ${{ env.TRIVY_CACHE_DIR }}..."\nmkdir -p ${{ env.TRIVY_CACHE_DIR }}\n'},{name:"Generate SBOM",run:"trivy --version\ntrivy repo \\\n  --format spdx-json \\\n  --output sbom.spdx.json \\\n  ${{ inputs.path }}\n"},{name:"Upload artifacts",uses:"actions/upload-artifact@v4",if:"always()",with:{name:"${{ inputs.artifact-prefix }}SBOM",path:"sbom.spdx.json"}}]}}}},77649:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"Execute Semantic Release",permissions:{actions:"read",contents:"write",issues:"write","pull-requests":"write","id-token":"write"},on:{workflow_call:{inputs:{"default-config":{required:!1,type:"boolean",description:"The workflow provides it's own .releaserc.json configuration. If you wish to provide your own config file, set to `false`",default:!0},branches:{required:!1,type:"string",description:"Use to override branches attribute in the .releaserc.json (used mostly for testing)"},"dry-run":{required:!1,type:"boolean",description:"Used to only preview the release result and notes for testing. Set to true to enable",default:!1},"create-floating-tag":{required:!1,type:"boolean",description:"Set to `true` to create an additional floating tag e.g. for release `v1.3.0` also create/move `v1` to the same SHA",default:!1},"create-sensitive-file":{required:!1,type:"boolean",default:!1,description:"Allows you to add a sensitive file from a Github secret. Set to `true` and provide `inputs.sensitive-file-path` and `secrets.sensitive-file-content`"},"sensitive-file-path":{required:!1,type:"string",description:"The relative path under which to write the sensitive-file e.g. `.netrc`"},"update-pom":{required:!1,type:"boolean",description:"If you need to update the pom.xml with the new version set to `true`",default:!1},"npm-auth":{required:!1,type:"boolean",description:"If you need to authenticate with an NPM registry to publish packages set to `true`",default:!1},"npm-registry":{required:!1,type:"string",description:"The URL to the NPM registry to publish packages to"},"vault-url":{required:!1,type:"string",description:"The URL to the HashiCorp Vault instance"},"vault-namespace":{required:!1,type:"string",description:"The namespace in HashiCorp Vault to retrieve token secret from."},"token-vault-secret":{required:!1,type:"string",description:"The name of the secret in Vault to retrieve token secret from in the format `secret/data/my/secret token | TOKEN ;` Piping into a TOKEN variable is required to be properly referenced in further jobs"}},secrets:{token:{required:!1,description:"A secret containing a Github PAT with relevant permissions to publish releases"},"auth-token":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"},"auth-token-2":{required:!1,description:"Arbitrary token to be exposed as environment variable in the format VARIABLE=value"},"sensitive-file-content":{required:!1,description:"Reference the Github secret that contains the content of your sensitive file"},"artifactory-user":{required:!1,description:"Username to authenticate with artifactory"},"artifactory-password":{required:!1,description:"Password or Token to authenticate with artifactory"}},outputs:{new_release_published:{description:"Whether a new release was published (true or false)",value:"${{ jobs.release.outputs.new_release_published }}"},new_release_version:{description:"Version of the new release e.g. `1.3.0`",value:"${{ jobs.release.outputs.new_release_version }}"},new_release_major_version:{description:"Major version of the new release e.g. `1`",value:"${{ jobs.release.outputs.new_release_major_version }}"},new_release_minor_version:{description:"Minor version of the new release e.g. `3`",value:"${{ jobs.release.outputs.new_release_minor_version }}"},new_release_patch_version:{description:"Patch version of the new release e.g. `0`",value:"${{ jobs.release.outputs.new_release_patch_version }}"},new_release_notes:{description:"The release notes for the new release",value:"${{ jobs.release.outputs.new_release_notes }}"},last_release_version:{description:"Version of the last release e.g. `1.2.0`, if there was one",value:"${{ jobs.release.outputs.last_release_version }}"},"ref-slug":{description:"A URL sanitized version of the github ref",value:"${{ jobs.release.outputs.ref-slug }}"},"short-sha":{description:"Captures the short SHA for use in this or later workflow jobs",value:"${{ jobs.release.outputs.short-sha }}"}}}},jobs:{release:{name:"Semantic Release","runs-on":"ubuntu-latest",outputs:{new_release_published:"${{ steps.semantic-release.outputs.new_release_published }}",new_release_version:"${{ steps.semantic-release.outputs.new_release_version }}",new_release_notes:"${{ steps.semantic-release.outputs.new_release_notes }}",new_release_major_version:"${{ steps.semantic-release.outputs.new_release_major_version }}",new_release_minor_version:"${{ steps.semantic-release.outputs.new_release_minor_version }}",new_release_patch_version:"${{ steps.semantic-release.outputs.new_release_patch_version }}",last_release_version:"${{ steps.semantic-release.outputs.last_release_version }}","short-sha":"${{ env.GITHUB_SHA_SHORT }}","ref-slug":"${{ env.GITHUB_REF_SLUG_URL }}"},steps:[{name:"Checkout the code",uses:"actions/checkout@v4",with:{"fetch-depth":0,"persist-credentials":!1}},{name:"Slugify github variables",uses:"rlespinasse/github-slug-action@v4.5.0"},{name:"Export NPM token",run:'echo "NPM_TOKEN=${{ secrets.npm-token }}" >> $GITHUB_ENV'},{name:"Include sensitive file",if:"${{ inputs.create-sensitive-file }}",env:{FILE_CONTENT:"${{ secrets.sensitive-file-content }}"},run:'echo "Creating ${{ inputs.sensitive-file-path }}..."\necho "$FILE_CONTENT" > ${{ inputs.sensitive-file-path }}\n'},{name:"Export auth token 1",env:{TOKEN:"${{ secrets.auth-token }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"Export auth token 2",env:{TOKEN:"${{ secrets.auth-token-2 }}"},if:"${{ env.TOKEN != '' }}",run:'echo "::add-mask::${TOKEN#*=}"\necho "${{ env.TOKEN }}" >> $GITHUB_ENV\n'},{name:"NPM Auth with Artifactory",if:"${{ inputs.npm-auth }}",run:"curl -u ${{ secrets.artifactory-user }}:${{ secrets.artifactory-password }} ${{ inputs.npm-registry }}/artifactory/api/npm/auth >> .npmrc"},{name:"Get Configuration",if:"${{ inputs.default-config }}",run:"echo \"Fetching default configuration from erzz/toolbox/configs...\"\ncurl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \\\n  --header 'Accept: application/vnd.github.v3.raw' \\\n  --location https://api.github.com/repos/erzz/toolbox/contents/configs/semantic-release/generic.json \\\n  --fail \\\n  --output .releaserc.json || exit 1\ncat .releaserc.json\n"},{name:"Get MVN Configuration",if:"${{ inputs.update-pom }}",run:"echo \"Fetching default configuration from erzz/toolbox/configs...\"\ncurl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \\\n  --header 'Accept: application/vnd.github.v3.raw' \\\n  --location https://api.github.com/repos/erzz/toolbox/contents/configs/semantic-release/pom.json \\\n  --fail \\\n  --output .releaserc.json || exit 1\ncat .releaserc.json\n"},{name:"Get Secrets",if:"${{ inputs.token-vault-secret != '' }}",id:"secrets",uses:"hashicorp/vault-action@v3",with:{url:"${{ inputs.vault-url }}",role:"default",method:"jwt",namespace:"${{ inputs.vault-namespace }}",path:"${{ env.GITHUB_REPOSITORY_OWNER_PART }}-${{ env.GITHUB_REPOSITORY_NAME_PART }}",secrets:"${{ inputs.token-vault-secret }}"}},{name:"Set token",id:"set-token",run:"if [ '${{ inputs.token-vault-secret }}' != '' ]; \nthen\n  echo \"Using 'token' secrets from Vault\"\n  echo \"TOKEN=${{ steps.secrets.outputs.TOKEN }}\" >> $GITHUB_OUTPUT\nelse\n  echo \"Using 'token' secret from GitHub Secrets\"\n  echo \"TOKEN=${{ secrets.token }}\" >> $GITHUB_OUTPUT\nfi\n"},{name:"Semantic Release",id:"semantic-release",uses:"cycjimmy/semantic-release-action@v4",env:{GITHUB_TOKEN:"${{ steps.set-token.outputs.TOKEN != '' && steps.set-token.outputs.TOKEN || secrets.GITHUB_TOKEN }}"},with:{semantic_version:"v21.1.1",branches:"${{ inputs.branches }}",dry_run:"${{ inputs.dry-run }}",extra_plugins:"@semantic-release/git\n@semantic-release/changelog\n@semantic-release/exec\nconventional-changelog-conventionalcommits@6.1.0\n"}},{name:"Success summary",if:"${{ steps.semantic-release.outputs.new_release_published == 'true' }}",run:'echo "\n### :bookmark: \u2705 New release created (${{ steps.semantic-release.outputs.new_release_version }})\n\n**Release Notes:**\n\n${{ steps.semantic-release.outputs.new_release_notes }}\n" >> $GITHUB_STEP_SUMMARY\n'}]},"floating-tag":{name:"Create floating tag",needs:"release",if:"${{ needs.release.outputs.new_release_published == 'true' && inputs.create-floating-tag }}","runs-on":"ubuntu-latest",steps:[{name:"Checkout the code",uses:"actions/checkout@v4",with:{"fetch-depth":0,"persist-credentials":!1}},{name:"Get Release SHA",id:"sha",run:'SHA=$(git show-ref --hash v${{ needs.release.outputs.new_release_version }})\necho "SHA for v${{ needs.release.outputs.new_release_version }}: $SHA"\necho "sha=$SHA" >> $GITHUB_OUTPUT\n'},{name:"Create floating tag",uses:"actions/github-script@v7",env:{SHA:"${{ steps.sha.outputs.sha }}"},with:{"github-token":"${{ secrets.token != '' && secrets.token || secrets.GITHUB_TOKEN }}",script:"const sha = process.env.SHA;\nconst major = 'v${{ needs.release.outputs.new_release_major_version }}';\n\n// If exists then update, else create\ntry {\n  await github.rest.git.updateRef({\n    owner: context.repo.owner,\n    repo: context.repo.repo,\n    ref: `tags/${major}`,\n    sha: sha,\n    force: true,\n  });\n  core.info(`Updated ${major} to ${sha}`);\n} catch(err) {\n  core.info(`Failed to update ${major}: ${err}`);\n  await github.rest.git.createRef({\n    owner: context.repo.owner,\n    repo: context.repo.repo,\n    ref: `refs/tags/${major}`,\n    sha: sha,\n  });\n  core.info(`Created ${major} at ${sha}`);\n}"}}]}}}},7267:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const s={name:"Node-Quality Tests",on:{push:{paths:[".github/workflows/node-quality.yml",".github/workflows/tests_node-quality.yml","tests/node-sample-app/*"]}},jobs:{"node-quality":{uses:"./.github/workflows/node-quality.yml",with:{"node-version":21,"eslint-reporter":"github-check","test-command":"yarn build","prettier-command":"yarn style","prettier-commit":!1}},"node-quality-coverage":{uses:"./.github/workflows/node-quality.yml",with:{"coverage-report-enable":!0,"eslint-enable":!1,path:"tests/node-sample-app"}}}}},82195:e=>{"use strict";e.exports=JSON.parse('{"label":"Workflows","link":{"type":"generated-index","description":"Documentation for Reusable Workflows in this and related repositories."}}')},47251:e=>{"use strict";e.exports=JSON.parse('{"label":"Containers","link":{"type":"generated-index","description":"Workflows for building and testing containers"}}')},3657:e=>{"use strict";e.exports=JSON.parse('{"label":"GitHub","link":{"type":"generated-index","description":"Workflows for automating various things within GitHub"}}')},95457:e=>{"use strict";e.exports=JSON.parse('{"label":"NodeJS","link":{"type":"generated-index","description":"Workflows for building and testing NodeJS applications"}}')},25645:e=>{"use strict";e.exports=JSON.parse('{"label":"Release","link":{"type":"generated-index","description":"Workflows for automating the release process"}}')}}]);