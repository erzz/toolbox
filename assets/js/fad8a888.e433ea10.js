"use strict";(self.webpackChunktoolbox=self.webpackChunktoolbox||[]).push([[3639],{16448:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"tutorials-and-guides/ghas/ghas","title":"Github Advanced Security","description":"Introduction","source":"@site/docs/tutorials-and-guides/ghas/ghas.mdx","sourceDirName":"tutorials-and-guides/ghas","slug":"/tutorials-and-guides/ghas/","permalink":"/docs/tutorials-and-guides/ghas/","draft":false,"unlisted":false,"editUrl":"https://github.com/erzz/toolbox/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials-and-guides/ghas/ghas.mdx","tags":[{"inline":true,"label":"ghas","permalink":"/docs/tags/ghas"},{"inline":true,"label":"security","permalink":"/docs/tags/security"}],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"tags":["ghas","security"]},"sidebar":"mainSidebar","previous":{"title":"Tutorial and Guides","permalink":"/docs/category/tutorial-and-guides"},"next":{"title":"Actions","permalink":"/docs/category/actions"}}');var s=i(74848),o=i(28453);const r={sidebar_position:4,tags:["ghas","security"]},a="Github Advanced Security",d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Enabling Github Advanced Security",id:"enabling-github-advanced-security",level:2},{value:"Dependabot",id:"dependabot",level:2},{value:"Quick Guide",id:"quick-guide",level:3},{value:"Configuring Dependabot",id:"configuring-dependabot",level:3},{value:"Code Scanning",id:"code-scanning",level:2},{value:"Enabling advanced mode",id:"enabling-advanced-mode",level:3},{value:"Protection rules for CodeQL",id:"protection-rules-for-codeql",level:3},{value:"Secret Scanning",id:"secret-scanning",level:2},{value:"Secret Scanning settings",id:"secret-scanning-settings",level:3},{value:"Workflow permissions",id:"workflow-permissions",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"github-advanced-security",children:"Github Advanced Security"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"GitHub Advanced Security (GHAS) is a set of security features and tools provided by GitHub to help\ndevelopers identify and address security vulnerabilities in their code. It's designed to enhance the\noverall security of software development on the GitHub platform. Key components of GitHub Advanced\nSecurity include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/code-scanning/introduction-to-code-scanning/about-code-scanning",children:"Code scanning"})})}),"\n",(0,s.jsx)(n.p,{children:"Analyses the code in a GitHub repository to find security vulnerabilities and coding errors. Any\nproblems identified by the analysis are shown in your repository. It also enables 3rd party tool\nintegration through the SARIF report format."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning",children:"Secret scanning"})})}),"\n",(0,s.jsx)(n.p,{children:"Detect secrets, for example keys and tokens, that have been committed to repositories. Secret\nscanning alerts for users and secret scanning alerts for partners are available and free of charge\nfor public repositories on GitHub.com. If push protection is enabled, it also detects secrets when\nthey are pushed to your repository."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/dependabot/dependabot-alerts/about-dependabot-alerts",children:"Dependabot"})})}),"\n",(0,s.jsx)(n.p,{children:"Detects dependencies that have a known security vulnerability and creates pull requests for\npatched versions. Show the full impact of changes to dependencies and see details of any\nvulnerable versions before you merge a pull request."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Dependabot can also be configured to keep dependencies up to date regardless of whether they have\na security vulnerability or not."})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"enabling-github-advanced-security",children:"Enabling Github Advanced Security"}),"\n",(0,s.jsx)(n.p,{children:"All security related jobs should integrate with Github Advanced Security."}),"\n",(0,s.jsx)(n.p,{children:"This enables you to view and manage all security findings in the Security Overview dashboard for\nyour repository."}),"\n",(0,s.jsx)(n.p,{children:"Workflows and jobs that are integrated with GHAS require that you enable Github Advanced Security\nfor your repository first, otherwise. they will fail because they will not be able to upload the\nSARIF reports."}),"\n",(0,s.jsx)(n.admonition,{title:"Admin required",type:"tip",children:(0,s.jsxs)(n.p,{children:["As with most repository configuration, you will need the ",(0,s.jsx)(n.code,{children:"Admin"})," or ",(0,s.jsx)(n.code,{children:"Maintainer"})," role for the\nrepository in order to enable Github Advanced Security."]})}),"\n",(0,s.jsx)(n.h2,{id:"dependabot",children:"Dependabot"}),"\n",(0,s.jsx)(n.h3,{id:"quick-guide",children:"Quick Guide"}),"\n",(0,s.jsx)(n.p,{children:"Different features of Dependabot serve different purposes:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependabot alerts:"})," These are notifications you receive when Dependabot detects a\nvulnerability in one of your dependencies. It's a way to keep you informed about potential\nsecurity risks in your project."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependabot security updates:"})," When Dependabot finds a security vulnerability in one of your\ndependencies, it not only alerts you, but it can also automatically open a pull request to update\nthe vulnerable dependency to a secure version. This feature is specifically focused on addressing\nsecurity vulnerabilities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Grouped security updates:"})," This featured can be used to combine multiple dependency updates\ninto a single pull request. This can be useful if you have a lot of dependencies or dependencies\nthat usually need to be updated together."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependabot version updates:"})," This feature is more about keeping your dependencies up-to-date\nin general, not just in response to security vulnerabilities. Dependabot can periodically check\nif there are newer versions of your dependencies available and open pull requests to update them.\nThis helps you take advantage of the latest features and improvements in your dependencies."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In summary, while all the above features are related to managing dependencies in your project,\nDependabot alerts and security updates are specifically about addressing security vulnerabilities,\nwhile version updates are about keeping your dependencies up-to-date with the latest versions."}),"\n",(0,s.jsx)(n.h3,{id:"configuring-dependabot",children:"Configuring Dependabot"}),"\n",(0,s.jsxs)(n.p,{children:["The configuration file ",(0,s.jsx)(n.code,{children:".github/dependabot.yml"})," is used to control how Dependabot behaves in your\nrepository."]}),"\n",(0,s.jsx)(n.p,{children:"The configuration file can be used to control both Dependabot security updates and Dependabot\nversion updates. If you want to receive security updates but not version updates, you can set\nopen-pull-requests-limit to 0 for a given package-ecosystem. This will prevent Dependabot from\nopening pull requests for version updates, but it will still open pull requests for security\nupdates."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file",children:"Read more about configuration options using dependabot.yml"})}),"\n",(0,s.jsx)(n.h2,{id:"code-scanning",children:"Code Scanning"}),"\n",(0,s.jsx)(n.h3,{id:"enabling-advanced-mode",children:"Enabling advanced mode"}),"\n",(0,s.jsx)(n.p,{children:"When a repository is enabled with GHAS, it is enabled with default, built in, CodeQL configuration.\nThis config is very generic and will try to autodetect the language and autobuild the application."}),"\n",(0,s.jsx)(n.p,{children:"This may well work for your case, however many projects require special build commands, need to\nauthenticate to private registries, or have other special requirements. In this case using the\nadvanced configuration via reusable workflows SAST job will be more suitable and allow you to\ncustomise the job to your needs."}),"\n",(0,s.jsx)(n.p,{children:"You can follow the steps below to customize your scanning, such as declaring specific build steps,\nfolders/file to ignore or exclude during scanning."}),"\n",(0,s.jsx)(n.p,{children:"In order to enable advanced mode, repository admin can:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Go to ",(0,s.jsx)(n.strong,{children:"Settings"})," -> ",(0,s.jsx)(n.strong,{children:"Code security and analysis"})]}),"\n",(0,s.jsxs)(n.li,{children:["Under the ",(0,s.jsx)(n.strong,{children:"Code Scanning"})," section -> ",(0,s.jsx)(n.strong,{children:"CodeQL analysis"})," click the ",(0,s.jsx)(n.strong,{children:"Set up"})," button"]}),"\n",(0,s.jsxs)(n.li,{children:["Select the ",(0,s.jsx)(n.strong,{children:"Advanced"})," mode option."]}),"\n",(0,s.jsxs)(n.li,{children:["It will prompt with a suggested commit for an implementation workflow, click ",(0,s.jsx)(n.strong,{children:"Cancel Changes"}),"\nand OK to discard changes"]}),"\n",(0,s.jsx)(n.li,{children:"Your repository is now in advanced mode, where you can use any workflow to execute the custom\nSAST jobs included in these workflows."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Read more about advanced configuration options for\n",(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/configuring-advanced-setup-for-code-scanning",children:"Code Scanning"})]}),"\n",(0,s.jsx)(n.h3,{id:"protection-rules-for-codeql",children:"Protection rules for CodeQL"}),"\n",(0,s.jsxs)(n.p,{children:["You can create protection rules to prevent merging of pull requests that introduce security issues\nbased on severity. This option is found under ",(0,s.jsx)(n.strong,{children:"Settings -> Code Security and Analysis -> Protection\nRules"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"secret-scanning",children:"Secret Scanning"}),"\n",(0,s.jsx)(n.p,{children:"Secret scanning will scan your entire Git history on all branches present in your GitHub repository\nfor secrets. Additionally, it also scans:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Descriptions and comments in issues"}),"\n",(0,s.jsx)(n.li,{children:"Titles, descriptions, and comments, in open and closed historical issues"}),"\n",(0,s.jsx)(n.li,{children:"Titles, descriptions, and comments in pull requests"}),"\n",(0,s.jsx)(n.li,{children:"Titles, descriptions, and comments in GitHub Discussions"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"secret-scanning-settings",children:"Secret Scanning settings"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.a,{href:"https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#high-confidence-patterns",children:"Secret Validation"}),":"]}),"\nGHAS does validity checks for some of the partner secrets, it checks if the secret identified is\nstill active or inactive."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/push-protection-for-repositories-and-organizations#about-push-protection-for-repositories-and-organizations",children:"Push protection"})})," -\nWith push protection for repositories and organizations, secret scanning blocks contributors from\npushing secrets to a repository and generates an alert whenever a contributor bypasses the\nprotection."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can configure a ",(0,s.jsx)(n.code,{children:"secret_scanning.yml"})," file to exclude directories from secret scanning,\nincluding when you use push protection. For example, you can exclude directories that contain tests\nor randomly generated content that would cause a false positive."]}),"\n",(0,s.jsxs)(n.p,{children:["Read more about configuring a\n",(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/secret-scanning/configuring-secret-scanning-for-your-repositories#excluding-directories-from-secret-scanning-alerts-for-users",children:"secret_scanning.yml"})]}),"\n",(0,s.jsx)(n.h2,{id:"workflow-permissions",children:"Workflow permissions"}),"\n",(0,s.jsx)(n.p,{children:"Workflows that integrate with Github Advanced Security must have the following permissions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"permissions:\n  actions: read\n  contents: read\n  security-events: write\n  # if the workflow uses OIDC / Workload Identity Federation\n  tokens: write\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"All reusable workflows from this repository request their own permissions! So if you are using a\nreusable workflow you don't need to worry about this setting. But other jobs in the same workflow\nmay need to be configured to have the correct permissions."})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(96540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);